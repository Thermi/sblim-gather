//
// $Id: Linux_Metric.mof,v 1.8 2004/11/10 16:08:24 heidineu Exp $
//
// (C) Copyright IBM Corp. 2003, 2004
//
// THIS FILE IS PROVIDED UNDER THE TERMS OF THE COMMON PUBLIC LICENSE
// ("AGREEMENT"). ANY USE, REPRODUCTION OR DISTRIBUTION OF THIS FILE
// CONSTITUTES RECIPIENTS ACCEPTANCE OF THE AGREEMENT.
//
// You can obtain a current copy of the Common Public License from
// http://oss.software.ibm.com/developerworks/opensource/license-cpl.html
//
// Author:       Viktor Mihajlovski
// Contributors:
//
// Description:
// CIM classes for Linux Metrics
//


#pragma locale ("en_US")


// -------------------------------------------------------------------
// *******************************************************************
// 	Classes
// *******************************************************************
// -------------------------------------------------------------------



// ===================================================================
// 	Linux_OperatingSystemMetricDefinition
// ===================================================================

[ Provider("cmpi:OSBase_MetricGathererProvider"),
  Description ("Data Gatherer Service")
]
class Linux_MetricGatherer : CIM_Service
{ 
  [Description("Number of registered plugins")]
  uint16 NumberOfPlugins;
  [Description("Number of active metrics")]
  uint16 NumberOfMetrics;
  [Description("Sampling indicator")]
  boolean   Sampling;
  [Description("Method to enable sampling")]
  boolean   StartSampling();
  [Description("Method to disable sampling")]
  boolean   StopSampling();
};

[ Provider("cmpi:OSBase_MetricRepositoryServiceProvider"),
  Description ("Metric Repository Service")
]
class Linux_MetricRepositoryService : CIM_Service
{ 
  [Description("Number of registered plugins")]
  uint16 NumberOfPlugins;
  [Description("Number of registered metrics")]
  uint16 NumberOfMetrics;
};

[ 
  Association,
  Provider("cmpi:OSBase_MetricInstanceProvider"),
  Description ("MetricInstance Association for Linux")
]
class Linux_MetricInstance : CIM_MetricInstance
{ 
  CIM_BaseMetricDefinition REF Antecedent;
  CIM_BaseMetricValue REF Dependent;
};

[ 
  Association,
  Provider("cmpi:OSBase_MetricForMEProvider"),
  Description ("MetricForME Association for Linux")
]
class Linux_MetricForME : CIM_MetricForME
{ 
  CIM_ManagedElement REF Antecedent;
  CIM_BaseMetricValue REF Dependent;
};

[ 
  Association,
  Provider("cmpi:OSBase_MetricDefForMEProvider"),
  Description ("MetricDefForME Association for Linux")
]
class Linux_MetricDefForME : CIM_MetricDefForME
{ 
  CIM_ManagedElement REF Antecedent;
  CIM_BaseMetricDefinition REF Dependent;
};

[  Description ("Plugin Control")
]
class Linux_MetricPlugin : CIM_Setting
{
  [Key, Description("Metric Definition Class Name")]
  String MetricDefinitionClassName;
  [Description("Name of the plugin library")]
  String MetricPluginName; 
  [Description("Is this plugin enabled")]
  boolean Enabled; 
};

[  Description ("Plugin Control for Repository")
]
class Linux_RepositoryPlugin : CIM_Setting
{
  [Key, Description("Metric Definition Class Name")]
  String MetricDefinitionClassName;
  [Description("Name of the repository plugin library")]
  String RepositoryPluginName; 
  [Description("Name of the CIM name translation plugin library")]
  String CIMTranslationPluginName; 
  [Description("Is this plugin enabled")]
  boolean Enabled; 
};

[  Description ("Definition to Value mapping")
]
class Linux_MetricValueDefinition : CIM_Setting
{
  [Key, Description("Metric Value Class Name")]
  String MetricValueClassName;
  [Description("Metric Definition Class Name")]
  String MetricDefinitionClassName; 
};


