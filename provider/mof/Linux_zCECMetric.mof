//
// $Id: Linux_zCECMetric.mof,v 1.1 2006/07/03 15:27:37 mihajlov Exp $
//
// (C) Copyright IBM Corp. 2006
//
// THIS FILE IS PROVIDED UNDER THE TERMS OF THE COMMON PUBLIC LICENSE
// ("AGREEMENT"). ANY USE, REPRODUCTION OR DISTRIBUTION OF THIS FILE
// CONSTITUTES RECIPIENTS ACCEPTANCE OF THE AGREEMENT.
//
// You can obtain a current copy of the Common Public License from
// http://oss.software.ibm.com/developerworks/opensource/license-cpl.html
//
// Author:       Viktor Mihajlovski <mihajlov@de.ibm.com>
// Contributors: 
//
// Description:
// This mof file contains the definitions for the CEC
// Metrics
//



// ===================================================================
// Linux_zCECMetric
// ===================================================================

[ Provider("cmpi:OSBase_MetricDefinitionProvider"),
  Description ("Class for System z CEC Metric Definitions")
]
class Linux_zCECMetric : CIM_BaseMetricDefinition
{
	[Experimental]
	boolean IsContinuous;
	[Experimental]
	uint16 ChangeType;
	[Experimental]
	uint16 TimeScope;
	[Experimental]
	uint16 GatheringType;
};


// ===================================================================
// Linux_zCECMetricValue
// ===================================================================

[ Provider("cmpi:OSBase_MetricValueProvider"),
  Description ("Class for System z CEC Metric Value")
]
class Linux_zCECMetricValue : CIM_BaseMetricValue
{ };


// ===================================================================
// instance definitions
// ===================================================================

instance of Linux_MetricPlugin  
{
	MetricDefinitionClassName = "Linux_zCECMetric";
 	MetricPluginName = "libmetriczCEC.so";
};

instance of Linux_RepositoryPlugin  
{
	MetricDefinitionClassName = "Linux_zCECMetric";
 	RepositoryPluginName = "librepositoryzCEC.so";
 	CIMTranslationPluginName = "libcimplugzCEC.so";
};


instance of Linux_MetricValueDefinition
{
	MetricValueClassName = "Linux_zCECMetricValue";
	MetricDefinitionClassName = "Linux_zCECMetric";
};
